services:
  db:
    image: mcr.microsoft.com/mssql/server:latest
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: Password123
    ports:
      - 1433:1433
    volumes:
      - mssql_data:/var/opt/mssql
    healthcheck:
      test: [
          "CMD",
          "/opt/mssql-tools18/bin/sqlcmd",
          "-C", # Trust connection
          "-U",
          "sa",
          "-P",
          "Password123",
          "-b", # Error on unsuccessful query
          "-Q",
          "SELECT 1",
        ]
      interval: 5s
      timeout: 2s
      retries: 20

  db-migrate:
    build:
      context: .
      target: deps
    command: sh -c "npm run db:migrate"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  # app:
  #   build:
  #     context: .
  #     target: deps
  #   command: sh -c "npm run dev"
  #   ports:
  #     - 127.0.0.1:3000:3000
  #   volumes:
  #     # Add more source files as needed
  #     # Don't bind mount root - build output (e.g. `node_modules`) from the local file system doesn't necessarily work inside of the container
  #     - ./public:/app/public
  #     - ./src:/app/src
  #     - ./.env:/app/.env
  #     - ./.eslintrc.cjs:/app/.eslintrc.cjs
  #     # Tailwind uses `.gitignore` for class detection
  #     - ./.gitignore:/app/.gitignore
  #     - ./.svgrrc.cjs:/app/.svgrrc.cjs
  #     - ./next.config.js:/app/next.config.js
  #     - ./postcss.config.js:/app/postcss.config.js
  #     - ./prettier.config.js:/app/prettier.config.js
  #     - ./svgr.d.ts:/app/svgr.d.ts
  #     - ./tsconfig.json:/app/tsconfig.json
  #   depends_on:
  #     db-migrate:
  #       condition: service_completed_successfully

  # seed:
  #   build:
  #     context: .
  #     target: seed
  #   env_file:
  #     - .env
  #   depends_on:
  #     db-migrate:
  #       condition: service_completed_successfully
  #   profiles:
  #     - seed

volumes:
  mssql_data:
